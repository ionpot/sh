# print text in color
# $1 int color
# $2 string text
incolor () {
	esc=$(printf "\e")
	printf "$esc[3%sm%s$esc[0m" $1 "$2"
}

# ls given file types
lsf() {
    ls *.$1
}

# grep js files
# excluding node_modules and hidden dirs
grjs() {
    find . -not \( -path "*/\.*" -prune \) -not \( -path "*/node_modules/*" -prune \) -type f -name \*.js -exec grep -n "$1" {} \+
}

# $1 = binary string
# $2 = output base
function fromb {
    node -p "parseInt('$1', 2).toString($2)"
}

# create .h and .c files from name
# $1 = name
cfiles () {
	token=${1^^}_H
	cat >$1.h <<CODE
#ifndef $token
#define $token

#endif
CODE
	cat >$1.c <<CODE
#include "$1.h"

#include <assert.h>
CODE
}
